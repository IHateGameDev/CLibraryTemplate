cmake_minimum_required(VERSION 3.10)
project(@PROJECT_NAME@)

###### OPTIONS SECTION ######

option(BUILD_STATIC "Building static library" ON)
option(BUILD_SHARED "Building shared library" OFF)
option(BUILD_TESTS "Building tests for library" ON)

###### SETUP COMPILER ######

find_program(CLANG_PATH clang)

if(CLANG_PATH)
  message(STATUS "Clang found: ${CLANG_PATH}")
  set(CMAKE_C_COMPILER ${CLANG_PATH})
else()
  message(STATUS "Clang not found, using default compiler.")
endif()

###### SETUP C SECTION ######

set(CMAKE_C_STANDARD 23)
set(CMAKE_C_STANDARD_REQUIRED ON)

include_directories(
  ${CMAKE_SOURCE_DIR}
)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -O3")

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
endif()

###### INSTALL AND BUILDING SECTION ######

install(DIRECTORIES ${CMAKE_SOURCE_DIR}/@PROJECT_NAME@ DESTINATION include)

file(GLOB_RECURCE @PROJECT_NAME@Sources
  ${CMAKE_SOURCE_DIR}/src/*.c
)

if(BUILD_STATIC)
  add_library(STATIC @PROJECT_NAME_LOWER@-static @PROJECT_NAME@Sources)
  install_targets(@PROJECT_NAME_LOWER@-static DESTINATION lib)
endif()

if(BUILD_SHARED)
  add_library(SHARED @PROJECT_NAME_LOWER@-shared @PROJECT_NAME@Sources)
  target_compile_options(@PROJECT_NAME_LOWER@-shared "-DAPI_SHARED_BUILD")
  install(TARGETS @PROJECT_NAME_LOWER@-shared DESTINATION lib)
endif()

###### TESTS SECTION ######
if(BUILD_TESTS)
  add_subdirectory(${CMAKE_SOURCE_DIR}/Tests/)
endif()
